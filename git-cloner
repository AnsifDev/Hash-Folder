#!/bin/python3
import json
import sys
from os import system, path, mkdir

def __detect_runtime_env():
    filename = path.join(app_cache, "temp.dat")
    cmd = "lsb_release -r > "+filename.replace(" ", "\\ ")
    system(cmd)

    file = open(filename)
    file_str = file.read()
    file.close()

    return float(file_str.split(":")[1].strip())

def main():
    """The application's entry point."""

    config_path = path.join(app_config, "app_config.json")
    if path.exists(config_path):
        config_file = open(config_path)
        config = json.loads(config_file.read())
        config_file.close()
    else:
        runtime_env = __detect_runtime_env()
        config = {
            "detected_runtime_env": runtime_env,
            "current_runtime_env": runtime_env
        }
        

    if len(sys.argv) == 2:
        print("Activating debug mode")

        match sys.argv[1]:
            case "focal": config["current_runtime_env"] = 20.04
            case "jammy": config["current_runtime_env"] = 22.04
            case "focal": config["current_runtime_env"] = 23.04
            case _: 
                print("Debug mode activation failed: codename unknown")
                config["current_runtime_env"] = config["detected_runtime_env"]
    elif len(sys.argv) > 2:
        print("Debug mode activation failed: Too many parameters")
    elif config["current_runtime_env"] != config["detected_runtime_env"]:
        config["current_runtime_env"] = config["detected_runtime_env"]
        config_file = open(config_path, "w")
        config_file.write(json.dumps(config))
        config_file.close()
    
    if len(sys.argv) > 1 or not path.exists(config_path):
        config_file = open(config_path, "w")
        config_file.write(json.dumps(config))
        config_file.close()

    from src.py.Application import Application
    app = Application()
    return app.run()


app_cache = path.abspath(".cache")
app_config = path.abspath(".config")

if not path.exists(app_cache): mkdir(app_cache)
if not path.exists(app_config): mkdir(app_config)

if __name__ == "__main__": main()
